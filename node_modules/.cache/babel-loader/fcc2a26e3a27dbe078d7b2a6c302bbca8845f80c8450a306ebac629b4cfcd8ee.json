{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst token = localStorage.getItem(\"token\");\nconst initialState = {\n  isAuthorized: token && token.length > 0\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: state => {\n      state.isAuthorized = true;\n    },\n    loginError: state => {\n      state.isAuthorized = false;\n    },\n    logout: state => {\n      state.isAuthorized = false;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  loginError,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","token","localStorage","getItem","initialState","isAuthorized","length","authSlice","name","reducers","loginSuccess","state","loginError","logout","actions","reducer"],"sources":["/Users/mateuszbaniuk/www/nord_rec/nord/src/redux/auth.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst token = localStorage.getItem(\"token\");\n\nconst initialState = {\n    isAuthorized: token && token.length > 0,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state) => {\n        state.isAuthorized = true;\n    },\n    loginError: (state) => {\n        state.isAuthorized = false;\n    },\n    logout: (state) => {\n        state.isAuthorized = false;\n    },\n  },\n});\n\nexport const { loginSuccess, loginError, logout } = authSlice.actions;\n\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAEJ,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG;AAC1C,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,YAAY,GAAG,IAAI;IAC7B,CAAC;IACDO,UAAU,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAACN,YAAY,GAAG,KAAK;IAC9B,CAAC;IACDQ,MAAM,EAAGF,KAAK,IAAK;MACfA,KAAK,CAACN,YAAY,GAAG,KAAK;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,YAAY;EAAEE,UAAU;EAAEC;AAAO,CAAC,GAAGN,SAAS,CAACO,OAAO;AAGrE,eAAeP,SAAS,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}